const fs=require("fs"),path=require("path"),log=require("npmlog"),async=require("async"),spawn=require("child_process").spawn,exec=require("child_process").exec,shelljs=require("shelljs"),mkdirp=require("mkdirp");shelljs.config.fatal=!0;
(function(){const k={log,runBuild:function(d,g){function e(c,a){log.verbose("build#runBuild()#_checkCmdAvailable()");exec("if ! type "+c+" > /dev/null; then echo 1; else echo 0; fi;",function(b,h){if(b)return a(b);if("1"===h.toString().trim())return a(Error(c+" command is not available in this platform"));setImmediate(a)})}const f={};async.series([e.bind(this,"cmake"),e.bind(this,"make"),function(c){log.verbose("build#runBuild()#_makeDirForCmake()");this.tmpCmakeDir=path.join(path.resolve(d.buildDir),
"BUILD_CMAKE");fs.existsSync(this.tmpCmakeDir)?(console.log("["+d.processName+"] "+this.tmpCmakeDir+" is already existing..."),console.log("["+d.processName+"] Removing files in "+this.tmpCmakeDir),shelljs.rm("-rf",path.join(this.tmpCmakeDir,"*"))):(console.log("["+d.processName+"] Making a 'BUILD_CMAKE' directory "+this.tmpCmakeDir),mkdirp.sync(this.tmpCmakeDir));c()},function(c){log.verbose("build#runBuild()#_runCmake()");console.log("["+d.processName+"] Running cmake in "+this.tmpCmakeDir);var a=
[".."];f.configure&&a.push("-DCMAKE_BUILD_TYPE="+f.configure.toUpperCase());console.log("["+d.processName+"] cmake "+a.join(" "));a=spawn("cmake",a,{cwd:this.tmpCmakeDir});a.stdout.on("data",function(b){console.log(b.toString())});a.stderr.on("data",function(b){console.warn(b.toString())});a.on("error",function(b){return c(b)});a.on("close",function(b){if(0!==b)return c(Error("cmake exits with code("+b+")"));c()})},function(c){log.verbose("build#runBuild()#_runMake()");console.log("["+d.processName+
"] Running make in "+this.tmpCmakeDir);var a=[];console.log("["+d.processName+"] make "+a.join(" "));a=spawn("make",a,{cwd:this.tmpCmakeDir});a.stdout.on("data",function(b){console.log(b.toString())});a.stderr.on("data",function(b){console.warn(b.toString())});a.on("error",function(b){return c(b)});a.on("close",function(b){if(0!==b)return c(Error("make exits with code("+b+")"));c()})},function(c){log.verbose("build#runBuild()#_postAction()");console.log("DONE");c()}],function(c){g(c,{msg:"Success"})})}};
"undefined"!==typeof module&&module.exports&&(module.exports=k)})();
