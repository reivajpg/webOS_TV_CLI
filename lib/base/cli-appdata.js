const fs=require("fs"),log=require("npmlog"),mkdirp=require("mkdirp"),path=require("path"),shelljs=require("shelljs"),Validator=require("jsonschema").Validator,clone=require("./../util/objclone"),Cli=function(){function d(a,b,c){return c&&"function"===typeof c?b?setImmediate(c,a,b):setImmediate(c,a):a||b}function l(a,b){let c={resultValue:!1,err:null};const f={id:"test",type:"array",items:{$ref:"/deviceSchema"}},h=new Validator;try{if(h.addSchema(a,"/deviceSchema"),(c=h.validate(b,f))&&0<c.errors.length){a=
"Invalid device info.";for(const e in c.errors){a=a.concat("\n");let g=c.errors[e].property+" "+c.errors[e].message;null!=(c=/instance\[*.*\]*\./g.exec(g))&&(g=g.substring(c[0].length));a=a.concat(g)}c.err=Error(a)}else c.resultValue=!0}catch(e){c.err=e}return c}function m(){if(k)return k;k=this;if(!this.inialized){var a=path.resolve(process.env.APPDATA||process.env.HOME||process.env.USERPROFILE),b={config:{dir:path.join(__dirname,"../../files","conf"),file:"config.json"},commands:{dir:path.join(__dirname,
"../../files","conf"),file:"command-service.json"},deviceList:{dir:path.join(__dirname,"../../files","conf"),file:"novacom-devices.json"},deviceListSchema:{dir:path.join(__dirname,"../../files","schema"),file:"NovacomDevices.schema"},template:{dir:path.join(__dirname,"../../files","conf"),file:"template.json"}};const h=path.join(__dirname,"../../files/conf/query");for(const e in b){var c=path.join(b[e].dir,b[e].file),f=e;this[f]=JSON.parse(fs.readFileSync(c));this[f+"File"]=c}f=this.config.dataDir?
path.join(a,this.config.dataDir):path.join(a,".webos");a=path.join(b.deviceList.dir,b.deviceList.file);b=path.join(f,b.deviceList.file);fs.existsSync(f)||mkdirp.sync(f);try{const e=JSON.parse(fs.readFileSync(b)),g=l(this.deviceListSchema,e);g&&g.resultValue?this.deviceList=e:(log.verbose("cliAppData()#init():","schema check failure:",b),log.verbose("cliAppData()#init():","result:",g),log.verbose("cliAppData()#init():","copy "+a+" to "+b),shelljs.cp("-f",a,b))}catch(e){log.verbose("cliAppData()#init():",
"err:",e),log.verbose("cliAppData()#init():","copy "+a+" to "+b),shelljs.cp("-f",a,b)}this.builtinDeviceListFile=a;this.deviceListFile=b;this.workDir=f;this.queryPath=h;this.inialized=!0}}let k;m.prototype={getConfig:function(a){return d(null,clone(this.config),a)},getDeviceList:function(a,b){return d(null,clone(this.deviceList),b)},getCommandService:function(a){return d(null,clone(this.commands),a)},setDeviceList:function(a,b){try{const c=l(this.deviceListSchema,a);if(c&&!c.resultValue)return d(c.err||
"invalid data",this.deviceList,b);this.deviceList=a;fs.writeFileSync(this.deviceListFile,JSON.stringify(this.deviceList,null,Number(4)))}catch(c){return d(c,this.deviceList,b)}return d(null,this.deviceList,b)},setConfig:function(a,b){try{this.config=a,fs.writeFileSync(this.configFile,JSON.stringify(this.config,null,Number(4)))}catch(c){return d(c,this.config,b)}return d(null,this.config,b)},setTemplate:function(a,b){try{this.template=a,fs.writeFileSync(this.templateFile,JSON.stringify(this.template,
null,Number(4)))}catch(c){return d(c,this.template,b)}},setQuery:function(a,b){try{fs.existsSync(this.queryPath)?shelljs.ls(this.queryPath).forEach(function(c){shelljs.rm(path.join(__dirname,"../../files/conf/query",c))}):fs.mkdirSync(this.queryPath),shelljs.ls(a+"/*.json").forEach(function(c){shelljs.cp(c,path.join(__dirname,"../../files/conf","query"))})}catch(c){return d(c,this.queryPath,b)}return d(null,this.queryPath,b)},resetDeviceList:function(a){log.verbose("cliAppData#resetDeviceList()");
try{fs.existsSync(this.deviceListFile)&&shelljs.rm(this.deviceListFile),shelljs.cp(this.builtinDeviceListFile,this.deviceListFile),this.deviceList=JSON.parse(fs.readFileSync(this.deviceListFile))}catch(b){return log.verbose("cliAppData()#resetDeviceList():","err:",b),d(b,clone(this.deviceList),a)}return d(null,clone(this.deviceList),a)}};return m}();"undefined"!==typeof module&&module.exports&&(module.exports=Cli);
