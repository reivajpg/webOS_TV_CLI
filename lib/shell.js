const async=require("async"),npmlog=require("npmlog"),novacom=require("./base/novacom"),errHndl=require("./base/error-handler");
(function(){const c=npmlog;c.heading="logger";c.level="warn";const q={log:c,remoteRun:function(b,h,k){c.info("shell#remoteRun()");b.session=new novacom.Session(b,function(a){c.verbose("run()","run:",h);c.verbose("run()","options:",b);a?k(a):b.session.run(h,process.stdin,process.stdout,process.stderr,k)})},shell:function(b,h){c.info("shell#shell()");const k=function(a,n){c.info("shell#_ssh()");async.series([function(d){a?setImmediate(d):a=new novacom.Session(b,d)},function(d){const e={term:"screen"};
a.ssh.shell(e,function(g,f){if(g)return setImmediate(d,errHndl.getErrMsg(g));(function(){function m(l){if(e.rows!==process.stdout.rows||e.columns!==process.stdout.columns)l.setWindow(process.stdout.rows,process.stdout.columns),e.rows=process.stdout.rows,e.columns=process.stdout.columns}f.on("exit",function(l,p){process.stdout.write("\n>>> Terminate the shell, bye.\n\n");c.silly("Stream :: exit :: code: "+l+", signal: "+p);a.ssh.end();d()});f.on("data",function(){m(f)});process.stdout.on("resize",
function(){m(f)});process.stdout.write(">>> Start "+a.getDevice().name+" shell.\n");process.stdout.write(">>> Type `exit` to quit.\n\n");process.stdin.setRawMode(!0);process.stdin.pipe(f);f.pipe(process.stdout)})()})}],function(d,e){let g=!1;0<e.indexOf("id")&&(g=!0);n(d,g)})};async.series([function(a){b.nReplies=1;b.session=new novacom.Session(b,a)},function(a){k(b.session,a)}],function(a){setImmediate(h,a)})}};"undefined"!==typeof module&&module.exports&&(module.exports=q)})();
