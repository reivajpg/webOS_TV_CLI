var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;$jscomp.ISOLATE_POLYFILLS=!1;$jscomp.FORCE_POLYFILL_PROMISE=!1;$jscomp.FORCE_POLYFILL_PROMISE_WHEN_NO_UNHANDLED_REJECTION=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(a,c,b){if(a==Array.prototype||a==Object.prototype)return a;a[c]=b.value;return a};
$jscomp.getGlobal=function(a){a=["object"==typeof globalThis&&globalThis,a,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof global&&global];for(var c=0;c<a.length;++c){var b=a[c];if(b&&b.Math==Math)return b}throw Error("Cannot find global object");};$jscomp.global=$jscomp.getGlobal(this);$jscomp.IS_SYMBOL_NATIVE="function"===typeof Symbol&&"symbol"===typeof Symbol("x");$jscomp.TRUST_ES6_POLYFILLS=!$jscomp.ISOLATE_POLYFILLS||$jscomp.IS_SYMBOL_NATIVE;$jscomp.polyfills={};
$jscomp.propertyToPolyfillSymbol={};$jscomp.POLYFILL_PREFIX="$jscp$";var $jscomp$lookupPolyfilledValue=function(a,c){var b=$jscomp.propertyToPolyfillSymbol[c];if(null==b)return a[c];b=a[b];return void 0!==b?b:a[c]};$jscomp.polyfill=function(a,c,b,d){c&&($jscomp.ISOLATE_POLYFILLS?$jscomp.polyfillIsolated(a,c,b,d):$jscomp.polyfillUnisolated(a,c,b,d))};
$jscomp.polyfillUnisolated=function(a,c,b,d){b=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var e=a[d];if(!(e in b))return;b=b[e]}a=a[a.length-1];d=b[a];c=c(d);c!=d&&null!=c&&$jscomp.defineProperty(b,a,{configurable:!0,writable:!0,value:c})};
$jscomp.polyfillIsolated=function(a,c,b,d){var e=a.split(".");a=1===e.length;d=e[0];d=!a&&d in $jscomp.polyfills?$jscomp.polyfills:$jscomp.global;for(var f=0;f<e.length-1;f++){var g=e[f];if(!(g in d))return;d=d[g]}e=e[e.length-1];b=$jscomp.IS_SYMBOL_NATIVE&&"es6"===b?d[e]:null;c=c(b);null!=c&&(a?$jscomp.defineProperty($jscomp.polyfills,e,{configurable:!0,writable:!0,value:c}):c!==b&&(void 0===$jscomp.propertyToPolyfillSymbol[e]&&(b=1E9*Math.random()>>>0,$jscomp.propertyToPolyfillSymbol[e]=$jscomp.IS_SYMBOL_NATIVE?
$jscomp.global.Symbol(e):$jscomp.POLYFILL_PREFIX+b+"$"+e),$jscomp.defineProperty(d,$jscomp.propertyToPolyfillSymbol[e],{configurable:!0,writable:!0,value:c})))};$jscomp.polyfill("Array.prototype.includes",function(a){return a?a:function(c,b){var d=this;d instanceof String&&(d=String(d));var e=d.length;b=b||0;for(0>b&&(b=Math.max(b+e,0));b<e;b++){var f=d[b];if(f===c||Object.is(f,c))return!0}return!1}},"es7","es3");
const path=require("path"),log=require("npmlog"),nopt=require("nopt"),launchLib=require("../lib/launch"),commonTools=require("../lib/base/common-tools"),version=commonTools.version,cliControl=commonTools.cliControl,help=commonTools.help,setupDevice=commonTools.setupDevice,appdata=commonTools.appdata,processName=path.basename(process.argv[1],".js");process.on("uncaughtException",function(a){log.error("uncaughtException",a.toString());log.verbose("uncaughtException",a.stack);cliControl.end(-1)});
const knownOpts={device:[String,null],"device-list":Boolean,version:Boolean,help:Boolean,"hidden-help":Boolean,level:"silly verbose info http warn error".split(" ")},shortHands={d:["--device"],D:["--device-list"],V:["--version"],h:["--help"],hh:["--hidden-help"],v:["--level","verbose"]},argv=nopt(knownOpts,shortHands,process.argv,2);log.heading=processName;log.level=argv.level||"warn";launchLib.log.level=log.level;log.verbose("argv",argv);
const options={device:argv.device},params={extend:!0},appId="com.palmdts.devmode";let op;argv.help||argv["hidden-help"]?(showUsage(argv["hidden-help"]),cliControl.end()):argv["device-list"]?setupDevice.showDeviceList(finish):argv.version?version.showVersionAndExit():op=extend;op&&version.checkNodeVersion(function(a){if(a)finish(a);else try{op()}catch(c){finish(c)}});
function showUsage(a){a?help.display(processName,appdata.getConfig(!0).profile,a):help.display(processName,appdata.getConfig(!0).profile)}function extend(){log.info("extend():","appId:",appId,"/params:",params);launchLib.launch(options,appId,params,finish)}
function finish(a,c){if(a){if(Array.isArray(a)&&0<a.length){for(const b in a){if(a[b].message.includes("not exist")||a[b].message.includes("not found"))a[b].message="Failed to launch 'Developer Mode' app. Please check the app is installed.";log.error(a[b].heading,a[b].message)}log.verbose(a[0].stack)}else{c=a.toString();if(c.includes("not exist")||c.includes("not found"))c="Failed to launch 'Developer Mode' app. Please check the app is installed.";log.error(c);log.verbose(a.stack)}cliControl.end(-1)}else c&&
c.msg&&console.log("Launched 'Developer Mode' app.\nPlease check the 'Remain Session' through the device screen.\n"),cliControl.end()};
