const async=require("async"),inquirer=require("inquirer"),log=require("npmlog"),nopt=require("nopt"),path=require("path"),Ssdp=require("ssdp-js"),novacom=require("./../lib/base/novacom"),commonTools=require("./../lib/base/common-tools"),version=commonTools.version,cliControl=commonTools.cliControl,help=commonTools.help,appdata=commonTools.appdata,errHndl=commonTools.errMsg,setupDevice=commonTools.setupDevice,isValidDeviceName=setupDevice.isValidDeviceName,isValidIpv4=setupDevice.isValidIpv4,isValidPort=
setupDevice.isValidPort,processName=path.basename(process.argv[1],".js");process.on("uncaughtException",function(a){log.info("uncaughtException",a.toString());log.error("uncaughtException",a.stack);cliControl.end(-1)});
const knownOpts={help:Boolean,level:"silly verbose info http warn error".split(" "),version:Boolean,list:Boolean,listfull:Boolean,add:[String,null],remove:[String,null],modify:[String,null],"default":[String,null],search:Boolean,timeout:[String,null],info:[String,Array],reset:Boolean},shortHands={h:["--help"],v:["--level","verbose"],V:["--version"],l:["--list"],F:["--listfull"],i:["--info"],a:["--add"],r:["--remove"],m:["--modify"],s:["--search"],f:["--default"],t:["--timeout"],R:["--reset"]},argv=
nopt(knownOpts,shortHands,process.argv,2);log.heading=processName;log.level=argv.level||"warn";log.verbose("argv",argv);const defaultDeviceInfo={profile:appdata.getConfig(!0).profile,type:"starfish",host:"127.0.0.1",port:22,username:"root",description:"new device description",files:"stream",default:!1},inqChoices=["add","modify"],dfChoices=["set default"],rmChoices=["remove"],totChoices=inqChoices.concat(rmChoices,dfChoices);let questions=[],op;
argv.list?op=list:argv.listfull?op=listfull:argv.reset?op=reset:argv.search||argv.timeout?op=search:argv.add||argv.modify||argv.info?op=modifyDeviceInfo:argv.default?op=setDefaultDeviceInfo:argv.remove?op=removeDeviceInfo:argv.version?version.showVersionAndExit():argv.help?(help.display(processName,appdata.getConfig(!0).profile),cliControl.end()):op=interactiveInput;op&&version.checkNodeVersion(function(){async.series([op.bind(this)],finish)});
const _needInq=function(a){return function(c){return-1!==c.indexOf(a)}};function list(a){async.series([function(c){setupDevice.showDeviceList(c)}],function(c){a(c)})}function listfull(a){async.series([function(c){setupDevice.showDeviceListFull(c)}],function(c){a(c)})}function reset(a){async.series([function(c){appdata.resetDeviceList(c)},setupDevice.showDeviceList.bind(this)],function(c){a(c)})}
function replaceDefaultDeviceInfo(a){a&&(a.profile=a.profile||defaultDeviceInfo.profile,a.type=a.type||defaultDeviceInfo.type,a.host=a.host||defaultDeviceInfo.host,a.port=a.port||defaultDeviceInfo.port,a.username=a.username||defaultDeviceInfo.username,a.files=a.files||defaultDeviceInfo.files,a.description=a.description||defaultDeviceInfo.description,a.default=a.default||defaultDeviceInfo.default)}
function _queryAddRemove(a,c){let b={};const g=this.resolver||(this.resolver=new novacom.Resolver);"function"===typeof a&&(c=a,a=null);async.waterfall([g.load.bind(g),g.list.bind(g),function(e,d){if(!a)return d(null,e,null);const f={};a.forEach(function(k){const h=k.name+" # "+k.address;for(const l in e)if(e[l].name===k.name){f[h]=e[l];f[h].op="modify";f[h].host=k.address;break}f[h]||(f[h]={name:k.name,host:k.address,op:"add"})});questions=[{type:"list",name:"discovered",message:"Select",choices:Object.keys(f)}];
inquirer.prompt(questions).then(function(k){d(null,e,f[k.discovered])})},function(e,d,f){const k=e.filter(function(h){return-1===h.conn.indexOf("novacom")}).map(function(h){return h.name});questions=[{type:"list",name:"op",message:"Select",choices:function(){return d?"modify"===d.op?inqChoices:["add"]:totChoices},filter:function(h){return h.toLowerCase()},default:function(){return d&&d.op?d.op:null}},{type:"input",name:"device_name",message:"Enter Device Name:",when:function(h){return"add"===h.op},
default:function(){return d&&d.name?d.name:null},validate:function(h){return 1>h.length?"Please enter device name.":-1!==k.indexOf(h)?"Device name is duplicated. Please use another name.":isValidDeviceName(h)?!0:"Invalid name. Please do not use letters starting with '%' or '$'."}},{type:"list",name:"device_name",message:"Select a device",choices:k,when:function(h){return-1!==["modify","remove","set default"].indexOf(h.op)&&!d}}];inquirer.prompt(questions).then(function(h){e.forEach(function(l){h.device_name===
l.name&&(b=l)});b.name=h.device_name||(d?d.name:null);b.mode=h.op||(d?d.op:null);b.host=d?d.host:b.host||null;f()})}],function(e){c(e,b)})}
function _queryDeviceInfo(a,c){let b=a.mode;const g=a.name,e=this.resolver||(this.resolver=new novacom.Resolver);questions=[{type:"input",name:"ip",message:"Enter Device IP address:",default:function(){return a.host||"127.0.0.1"},validate:function(d){return isValidIpv4(d)?!0:"Incorrect ip address!"},when:function(){return _needInq(b)(inqChoices)}},{type:"input",name:"port",message:"Enter Device Port:",default:function(){return a.port||"22"},validate:function(d){return isValidPort(d)?!0:"Incorrect port number!"},
when:function(){return _needInq(b)(inqChoices)}},{type:"input",name:"user",message:"Enter ssh user:",default:function(){return a.username||"root"},when:function(){return _needInq(b)(inqChoices)}},{type:"input",name:"description",message:"Enter description:",default:function(){return a.description||"new device"},when:function(){return _needInq(b)(inqChoices)}},{type:"list",name:"auth_type",message:"Select authentication",choices:["password","ssh key"],default:function(){let d=0;a.privateKeyName&&(d=
1);return d},when:function(){return _needInq(b)(inqChoices)}},{type:"password",name:"password",message:"Enter password:",when:function(d){return _needInq(b)(inqChoices)&&"password"===d.auth_type}},{type:"input",name:"ssh_key",message:"Enter ssh private key file name:",default:function(){return a.privateKeyName||"webos_emul"},when:function(d){return _needInq(b)(inqChoices)&&"ssh key"===d.auth_type}},{type:"input",name:"ssh_passphrase",message:"Enter key's passphrase:",default:function(){return a.passphrase||
void 0},when:function(d){return _needInq(b)(inqChoices)&&"ssh key"===d.auth_type}},{type:"confirm",name:"default",message:"Set default target ?",default:!1,when:function(){return"add"===b}},{type:"confirm",name:"confirm",message:"Save ?",default:!0}];inquirer.prompt(questions).then(function(d){if(d.confirm)log.info("setup-device#interactiveInput()","Saved!");else return log.info("setup-device#interactiveInput()","Canceled!"),c(null,{msg:"Canceled"});const f={profile:appdata.getConfig(!0).profile,
name:g,host:d.ip,port:d.port,description:d.description,username:d.user,default:d.default};if("add"===b||"modify"===b)if(d.auth_type&&"password"===d.auth_type)f.password=d.password,f.privateKey="@DELETE@",f.passphrase="@DELETE@",f.privateKeyName="@DELETE@";else if(d.auth_type&&"ssh key"===d.auth_type)f.password="@DELETE@",f.privateKey={openSsh:d.ssh_key},f.passphrase=d.ssh_passphrase||"@DELETE@",f.privateKeyName="@DELETE@";else return c(errHndl.getErrMsg("NOT_SUPPORT_AUTHTYPE",d.auth_type));"set default"===
b&&(f.default=!0,b="default");replaceDefaultDeviceInfo(f);f.port&&(f.port=Number(f.port));async.series([e.load.bind(e),e.modifyDeviceFile.bind(e,b,f),setupDevice.showDeviceList.bind()],function(k){if(k)return c(k);c(null,{msg:"Success to "+b+" a device!!"})})})}
function interactiveInput(a){async.waterfall([setupDevice.showDeviceList.bind(this),function(c){console.log("** You can modify the device info in the above list, or add new device.");c()},_queryAddRemove,_queryDeviceInfo],function(c,b){a(c,b)})}
function search(a){const c=new Ssdp,b=1E3*Number(argv.timeout)||5E3;let g=[],e=!1;console.log("Searching...");log.verbose("search()#timeout:",b);c.start();c.onDevice(function(d){!d.headers||!d.headers.SERVER||0>d.headers.SERVER.indexOf("WebOS")||e||log.verbose("search()# %s:%s (%s)","[Discovered]",d.name,d.address)});async.waterfall([function(d){setTimeout(function(){g=c.getList().map(function(f){e=!0;return{uuid:f.headers.USN.split(":")[1],name:f.name.replace(/\s/g,"_"),address:f.address,registered:!1}});
if(0===g.length)return console.log("No devices is discovered."),a();log.verbose("search()#discovered:",g.length);d(null,g)},b)},_queryAddRemove.bind(this),_queryDeviceInfo.bind(this)],function(d){a(d)})}
function _getParams(a){a=argv[a]?[].concat(argv[a]):[];let c={};1===a.length&&-1!==a[0].indexOf("{")&&-1!==a[0].indexOf("}")&&0===(a[0].split("'").length-1)%2&&(a[0]=a[0].replace(/'/g,'"'));a.forEach(function(b){try{c=JSON.parse(b)}catch(g){try{const e=b.split("=");2===e.length?(c[e[0]]=e[1],log.info("Inserting params ",e[0]+" = "+e[1])):log.verbose("Ignoring invalid arguments:",b)}catch(e){log.verbose("Ignoring invalid arguments:",b)}}});void 0!==c.default&&"string"==typeof c.default&&(c.default=
"true"===c.default);log.info("getParams():","params:",JSON.stringify(c));return c}
function modifyDeviceInfo(a){try{const c=argv.add?"add":argv.modify?"modify":null;if(!c)return a(errHndl.getErrMsg("INVALID_MODE"));if(argv[c].match(/^-/)||"true"===argv[c])return a(errHndl.getErrMsg("EMPTY_VALUE","DEVICE_NAME"));const b=argv.info?_getParams("info"):_getParams(c);if(argv.info){if(0===Object.keys(b).length)return a(errHndl.getErrMsg("EMPTY_VALUE","DEVICE_INFO"));b.name||(b.name=argv[c])}else b.name=argv[c];void 0!==b.default&&"modify"===c&&(log.warn("Ignoring invalid arguments : default"),
b.default=void 0);b.privateKey&&(b.privatekey=b.privateKey);"string"===typeof b.privatekey&&(b.privateKey=b.privatekey,b.privateKey={openSsh:b.privateKey},delete b.privatekey,b.password="@DELETE@");"undefined"!==typeof b.password&&"@DELETE@"!==b.password&&(b.privateKey="@DELETE@",b.passphrase="@DELETE@");"add"===c&&(replaceDefaultDeviceInfo(b),b.privateKey||b.password||(b.password=""));if(!isValidDeviceName(b.name))return a(errHndl.getErrMsg("INVALID_DEVICENAME"));if(b.host&&!isValidIpv4(b.host))return a(errHndl.getErrMsg("INVALID_VALUE",
"host",b.host));if(b.port&&!isValidPort(b.port))return a(errHndl.getErrMsg("INVALID_VALUE","port",b.port));b.port&&(b.port=Number(b.port));b.profile||(b.profile=defaultDeviceInfo.profile);const g=this.resolver||(this.resolver=new novacom.Resolver);async.series([g.load.bind(g),g.modifyDeviceFile.bind(g,c,b),setupDevice.showDeviceList.bind(this)],function(e){if(e)return a(e);a(null,{msg:"Success to "+c+" a device named "+b.name+"!!"})})}catch(c){a(c)}}
function setDefaultDeviceInfo(a){try{if("true"===argv.default)return a(errHndl.getErrMsg("EMPTY_VALUE","DEVICE_NAME"));const c=this.resolver||(this.resolver=new novacom.Resolver),b={name:argv.default,default:!0};async.series([c.load.bind(c),c.modifyDeviceFile.bind(c,"default",b),setupDevice.showDeviceList.bind(this)],function(g){if(g)return a(g);a(null,{msg:"Success to set device named "+argv.default+" to default!!"})})}catch(c){a(c)}}
function removeDeviceInfo(a){try{if("true"===argv.remove)return a(errHndl.getErrMsg("EMPTY_VALUE","DEVICE_NAME"));const c=this.resolver||(this.resolver=new novacom.Resolver),b={name:argv.remove,profile:defaultDeviceInfo.profile};async.series([c.load.bind(c),c.modifyDeviceFile.bind(c,"remove",b),setupDevice.showDeviceList.bind(this)],function(g){if(g)return a(g);a(null,{msg:"Success to remove a device named "+argv.remove+"!!"})})}catch(c){a(c)}}
function finish(a,c){if(a){if(Array.isArray(a)&&0<a.length){for(const b in a)log.error(a[b].heading,a[b].message);log.verbose(a[0].stack)}else log.error(a.toString()),log.verbose(a.stack);cliControl.end(-1)}else log.info("finish():",c),c&&c.msg&&console.log(c.msg),cliControl.end()};
