const path=require("path"),nopt=require("nopt"),async=require("async"),inquirer=require("inquirer"),log=require("npmlog"),readJsonSync=require("./../lib/util/json").readJsonSync,hasProperty=require("./../lib/util/property"),GeneratorLib=require("./../lib/generator"),commonTools=require("./../lib/base/common-tools"),cliControl=commonTools.cliControl,version=commonTools.version,help=commonTools.help,appdata=commonTools.appdata,errHndl=commonTools.errMsg,processName=path.basename(process.argv[1],".js");
process.on("uncaughtException",function(b){log.error("uncaughtException",b.toString());log.info("uncaughtException",b.stack);cliControl.end(-1)});2===process.argv.length&&process.argv.splice(2,0,"--help");let idx;(-1!==(idx=process.argv.indexOf("--list"))||-1!==(idx=process.argv.indexOf("-l")))&&process.argv[idx+1]&&process.argv[idx+1].toString().match(/^-/)&&process.argv.splice(idx+1,0,"true");
const knownOpts={help:Boolean,version:Boolean,list:String,overwrite:Boolean,servicename:String,template:String,property:[String,Array],"no-query":Boolean,level:"silly verbose info http warn error".split(" ")},shortHands={h:"--help",V:"--version",l:"--list",f:"--overwrite",t:"--template",p:"--property",s:"--servicename",nq:"--no-query",v:["--level","verbose"]},argv=nopt(knownOpts,shortHands,process.argv,2);log.heading=processName;log.level=argv.level||"warn";log.verbose("argv",argv);
argv.level&&(delete argv.level,0===argv.argv.remain.length&&1===Object.keys(argv).length&&(argv.help=!0));const config=appdata.getConfig(!0),options={tmplFile:path.join(__dirname,"/../files/conf/","template.json"),overwrite:argv.overwrite,tmplName:argv.template,listType:argv.list,props:argv.property||[],appinfo:{},pkginfo:{},svcinfo:{},svcName:argv.servicename,query:hasProperty(argv,"query")?argv.query:!0,out:argv.argv.remain[0]};let op,gen;
argv.help?(showUsage(),cliControl.end()):argv.version?version.showVersionAndExit():op=argv.list?list:generate;op&&version.checkNodeVersion(function(){async.series([op.bind(this)],finish)});function showUsage(b){b?help.display(processName,appdata.getConfig(!0).profile,b):help.display(processName,appdata.getConfig(!0).profile)}function getGenerator(){gen||(gen=new GeneratorLib(options.tmplFile));return gen}function list(b){getGenerator().showTemplates(options.listType);b()}
function parsePropArgs(b){const c=options.props;1===c.length&&-1!==c[0].indexOf("{")&&-1!==c[0].indexOf("}")&&0===(c[0].split("'").length-1)%2&&(c[0]=c[0].replace(/'/g,'"'));c.forEach(function(e){try{var a=JSON.parse(e);for(const d in a)b[d]=a[d]}catch(d){a=e.split("="),2===a.length?b[a[0]]=a[1]:log.warn("Ignoring invalid arguments:",e)}})}function getQueryFile(b,c){return path.join(__dirname,"../files/conf/query","query-"+c+".json")}
function queryInfo(b){b=readJsonSync(b);const c=[];for(const e in b){const a={type:"input"};a.name=e;a.message=b[e].query;a.default=b[e].default;c.push(a)}return inquirer.prompt(c,function(e){return e})}
function generate(b){const c=getGenerator(),e=c.getTemplates();if(!options.tmplName)for(const a in e)if(e[a].default){options.tmplName=a;break}if(!options.tmplName)return b(errHndl.getErrMsg("EMPTY_VALUE","TEMPLATE"));if(!options.out)return b(errHndl.getErrMsg("EMPTY_VALUE","APP_DIR"));Promise.resolve().then(function(){const a=!!options.overwrite,d=!!options.query,f=path.resolve(options.out),g=c.existOutDir(f);return inquirer.prompt([{type:"confirm",name:"overwrite",message:"The directory already exists. The template files in the directory will be replaced. Continue?",
default:!1,when:function(){return!a&&d&&g}}]).then(function(h){options.overwrite=h.overwrite||options.overwrite;if(g&&!options.overwrite)throw errHndl.getErrMsg("NOT_OVERWRITE_DIR",f);})}).then(function(){var a=e[options.tmplName];if(!a)throw errHndl.getErrMsg("INVALID_VALUE","TEMPLATE",options.tmplName);if(a.type)if(options.props.length)a.type.match(/(app$|appinfo$)/)?parsePropArgs(options.appinfo):a.type.match(/(service$|serviceinfo$)/)?parsePropArgs(options.svcinfo):a.type.match(/(package$|packageinfo$)/)&&
parsePropArgs(options.pkginfo);else{if(options.query&&options.tmplName.match(/(^hosted)/))return a=getQueryFile(config.profile,"hosted"),queryInfo(a).then(function(d){for(const f in d)options.appinfo[f]=d[f]});if(options.query&&a.type.match(/(app$|appinfo$)/))return a=getQueryFile(config.profile,"app"),queryInfo(a).then(function(d){for(const f in d)options.appinfo[f]=d[f]});if(options.query&&!options.svcName&&a.type.match(/(service$|serviceinfo$)/))return a=getQueryFile(config.profile,"service"),
queryInfo(a).then(function(d){d.id&&(options.svcName=d.id)});if(options.query&&a.type.match(/(package$|packageinfo$)/))return a=getQueryFile(config.profile,"package"),queryInfo(a).then(function(d){for(const f in d)options.pkginfo[f]=d[f]})}}).then(function(){return c.generate(options).then(function(){finish(null,{msg:"Success"})})}).catch(function(a){finish(a)})}
function finish(b,c){if(b){if(Array.isArray(b)&&0<b.length){for(const e in b)log.error(b[e].heading,b[e].message);log.verbose(b[0].stack)}else log.error(b.toString()),log.verbose(b.stack);cliControl.end(-1)}else c&&c.msg&&console.log(c.msg),cliControl.end()};
